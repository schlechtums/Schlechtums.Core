# This is a basic workflow to help you get started with Actions

name: Publish Nuget Package

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ dev, develop ]

env:
  SOLUTION_FOLDER: 'src/Schlechtums.Core'
  VERSION: '2.0.0'
  DOTNET_VERSION: "3.1.301" # set this to the dotnet version to use

jobs:
  build:
    runs-on: ubuntu-latest
    name: Publish NuGet package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Nuget Packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET Core ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_ORG_PUSH }}    

      - name: Unit Test
        run: cd ${{ env.SOLUTION_FOLDER }}; dotnet test -nologo -c Release
        
      - name: Build Solution
        run: cd ${{ env.SOLUTION_FOLDER }}; dotnet build -nologo -c Release /property:Version=${{ env.VERSION }}.$GITHUB_RUN_NUMBER

      - name: Push to nuget.org
        run: find . -name '*.nupkg' -exec nuget push {} -SkipDuplicate -NoSymbols -ApiKey ${{ secrets.NUGET_ORG_PUSH }} \;

  SonarQube:
    runs-on: ubuntu-latest
    needs: build
    name: SonarQube Analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache Nuget Packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarQube scanner
        shell: pwsh
        run: dotnet tool update dotnet-sonarscanner --global

      - name: Install coverlet.console
        shell: pwsh
        run: |
          dotnet tool install coverlet.console --global

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          cd ${{ env.SOLUTION_FOLDER }}
          dotnet-sonarscanner begin /d:sonar.cs.opencover.reportsPaths=coverage.opencover.xml /k:"schlechtums_Core" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          coverlet Schlechtums.Core.UnitTest/bin/Debug/netcoreapp3.1/Schlechtums.Core.UnitTest.dll --target "dotnet" --targetargs "test --no-build" --format opencover
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
